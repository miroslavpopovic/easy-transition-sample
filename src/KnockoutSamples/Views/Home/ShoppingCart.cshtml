@{
    ViewBag.Title = "Shopping Cart Sample";
}

<div class="row-fluid">
    <table class="table table-bordered table-striped table-condensed" style="width: 800px;">
        <thead>
            <tr>
                <th style="width: 30%;">Category</th>
                <th style="width: 30%;">Product</th>
                <th style="width: 10%;" class="right">Price</th>
                <th style="width: 10%;" class="right">Quantity</th>
                <th style="width: 10%;" class="right">Subtotal</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: lines">
            <tr>
                <td>
                    <select data-bind="options: sampleProductCategories,
                                       optionsText: 'name',
                                       optionsCaption: 'Select...',
                                       value: category"></select>
                </td>
                <td data-bind="with: category">
                    <select data-bind="options: products,
                                       optionsText: 'name',
                                       optionsCaption: 'Select...',
                                       value: $parent.product"></select>
                </td>
                <td class="right">
                    <span data-bind="text: priceFormatted"></span>
                </td>
                <td class="right">
                    <input class="input-mini right" 
                        data-bind="visible: product, value: quantity, valueUpdate: 'afterKeyDown'" />
                </td>
                <td class="right">
                    <span data-bind="visible: product, text: subtotal.formatted"></span>
                </td>
                <td>
                    <button class="btn btn-link" 
                            data-bind="click: function (line) { $parent.removeLine(line); },
                                       visible: category">Remove</button>
                </td>
            </tr>
        </tbody>
    </table>    
</div>
<div class="row-fluid">
    <div class="span12">
        <strong>Grand total: </strong>
        <span data-bind="text: grandTotal"></span>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">

        (function() {
            
            var CartLine = function(parent) {
                var self = this;

                self.category = ko.observable();
                self.product = ko.observable();
                self.quantity = ko.observable(1);
                
                self.subtotal = ko.computed(function() {
                    return self.product() ? self.product().price * parseInt(self.quantity(), 10) : 0;
                });
                self.subtotal.formatted = ko.computed(function() {
                    return Globalize.format(self.subtotal(), 'C2');
                });

                self.priceFormatted = ko.computed(function () {
                    var product = self.product();
                    return product ? Globalize.format(product.price, 'C2') : '';
                });

                self.category.subscribe(function() {
                    self.product(undefined);
                    parent.addEmptyLine();
                });
            };

            var ShoppingCart = function() {
                var self = this;

                self.shippingDate = ko.observable();
                
                self.lines = ko.observableArray([new CartLine(self)]);

                self.grandTotal = ko.computed(function() {
                    var total = 0,
                        lines = self.lines();

                    for (var i = 0, j = lines.length; i < j; i++) {
                        total += lines[i].subtotal();
                    }

                    return Globalize.format(total, 'C2');
                });
            };

            ko.utils.extend(ShoppingCart.prototype, {
                addEmptyLine: function () {
                    var lines = this.lines();
                    
                    if (lines[lines.length - 1].category()) {
                        this.lines.push(new CartLine(this));
                    }
                },
                
                removeLine: function(line) {
                    this.lines.remove(line);
                }
            });

            ko.applyBindings(new ShoppingCart());
        }());

    </script>
}
